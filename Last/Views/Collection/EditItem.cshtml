@model LogicLayer.ViewModels.ItemViewModel

@using (Html.BeginForm("UpdateItem", "Collection"))
{
    <div class="form-horizontal">
        @Html.HiddenFor(model => model.GroupId)
        @Html.HiddenFor(model => model.Id)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                <input class="form-control text-box single-line" id="Tags" name="Tags" type="text" value="" readonly>
                @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
            </div>
        </div>

        @foreach (var item in Model.CustomFieldViewModels)
        {
            <div class="form-group">
                <label class="control-label col-md-2" for="">@item.Name</label>
                <div class="col-md-12">
                    @{ string val;
                        if (Model.CustomValues.FirstOrDefault(x => x.CustomFieldId == item.Id) != null)
                        {
                            val = Model.CustomValues.FirstOrDefault(x => x.CustomFieldId == item.Id).Value.ToString();
                        }
                        else
                        {
                            val = "";
                        }
                    }

                    @switch (item.Type)
                    {
                        case "Date":
                            <input class="form-control text-box single-line" id="text" name="text" type="date" value="@val">
                            break;
                        case "Markdown":
                            <textarea class="form-control" id="text" name="text" rows="3">@val</textarea>
                            break;
                        case "Int":
                            <input class="form-control text-box single-line" id="text" name="text" type="number" value="@val">
                            break;
                        default:
                            <input class="form-control text-box single-line" id="text" name="text" type="text" value="@val">
                            break;
                    }

                    <input type="hidden" value="@item.Id" name="fieldId" id="fieldId" />
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" style="width: 100%" value="@Resources.Resources.save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div class="form-horizontal">
    <hr />
    <div class="form-group">
        <span class="control-label col-md-2">@Resources.Resources.write_tag</span>
        <div class="col-md-12">
            <input type="text" class="form-control" id="tagName" placeholder="@Resources.Resources.write_tag">
            <button class="btn btn-default" onclick="displayText()">@Resources.Resources.add_tag</button>
        </div>
    </div>
</div>


<script type="text/javascript">
            $(document).ready(function () {
                $('#tagName').autocomplete({
                    source: '@Url.Action("Tags", "Collection")'
                });
            });

    function displayText() {
        if (document.getElementById("tagName").value != "") {
            document.getElementById("Tags").value += document.getElementById("tagName").value + " "
            document.getElementById("tagName").value = ""
        }
    }
</script>

